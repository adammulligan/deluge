(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['torrent_list.hbs'] = template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [2,'>= 1.0.0-rc.3'];
helpers = helpers || Handlebars.helpers; data = data || {};
  var buffer = "", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += "\n    ";
  options = {hash:{
    'torrent': (depth0)
  },data:data};
  buffer += escapeExpression(((stack1 = helpers.subView),stack1 ? stack1.call(depth0, "TorrentItemView", options) : helperMissing.call(depth0, "subView", "TorrentItemView", options)))
    + "\n  ";
  return buffer;
  }

  buffer += "<h1>TorrentList</h1>\n\n<ul>\n  ";
  stack1 = helpers.each.call(depth0, depth0.torrents, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n</ul>\n";
  return buffer;
  });
templates['torrent_item.hbs'] = template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [2,'>= 1.0.0-rc.3'];
helpers = helpers || Handlebars.helpers; data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "Name: "
    + escapeExpression(((stack1 = ((stack1 = depth0.torrent),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\n";
  return buffer;
  });
})();


// Generated by CoffeeScript 1.6.2
(function() {
  var _base, _base1, _base2, _base3, _ref, _ref1, _ref2, _ref3,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  (_base = window.Backbone).Models || (_base.Models = {});

  window.Backbone.Models.Torrent = (function(_super) {
    __extends(Torrent, _super);

    function Torrent() {
      _ref = Torrent.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return Torrent;

  })(Backbone.Model);

  window.Backbone || (window.Backbone = {});

  (_base1 = window.Backbone).Collections || (_base1.Collections = {});

  Backbone.Collections.TorrentCollection = (function(_super) {
    __extends(TorrentCollection, _super);

    function TorrentCollection() {
      _ref1 = TorrentCollection.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    TorrentCollection.prototype.model = Backbone.Models.Torrent;

    return TorrentCollection;

  })(Backbone.Collection);

  window.Backbone || (window.Backbone = {});

  (_base2 = window.Backbone).Views || (_base2.Views = {});

  Backbone.Views.TorrentListView = (function(_super) {
    __extends(TorrentListView, _super);

    function TorrentListView() {
      this.render = __bind(this.render, this);      _ref2 = TorrentListView.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    TorrentListView.prototype.template = Handlebars.templates['torrent_list.hbs'];

    TorrentListView.prototype.initialize = function(options) {
      var torrent;

      this.torrents = new Backbone.Collections.TorrentCollection();
      torrent = new Backbone.Models.Torrent();
      torrent.set('name', 'adam');
      this.torrents.add(torrent);
      return this.render();
    };

    TorrentListView.prototype.render = function() {
      this.closeSubViews();
      this.$el.html(this.template({
        torrents: this.torrents.models
      }));
      this.renderSubViews();
      return this;
    };

    TorrentListView.prototype.onClose = function() {
      return this.closeSubViews();
    };

    return TorrentListView;

  })(Backbone.Diorama.NestingView);

  window.Backbone || (window.Backbone = {});

  (_base3 = window.Backbone).Views || (_base3.Views = {});

  Backbone.Views.TorrentItemView = (function(_super) {
    __extends(TorrentItemView, _super);

    function TorrentItemView() {
      _ref3 = TorrentItemView.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    TorrentItemView.prototype.template = Handlebars.templates['torrent_item.hbs'];

    TorrentItemView.prototype.initialize = function(options) {
      this.model = options.torrent;
      return this.render();
    };

    TorrentItemView.prototype.render = function() {
      this.$el.html(this.template({
        torrent: this.model.toJSON()
      }));
      return this;
    };

    TorrentItemView.prototype.onClose = function() {};

    return TorrentItemView;

  })(Backbone.View);

}).call(this);
